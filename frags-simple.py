"""
@author: Nicolas Hudin

Given a plasmid dna sequence and patterns, simulates a digest.

Prints all shortest possible sequences created by a digest.

Displays a histogram of sequence length and mean and median length of sequences.

User defined parameters:
    Dna sequence
    dna digest patterns
"""


import matplotlib.pyplot as plt

import statistics

#dna sequence to be analyzed

dnaseq="""aaaggtaaaggaagtcgcctaggatcggtaataccggtggaagatcctgagtatcccgctcacatacagcggcaattggtgactggtgtcgtgaactctcaggcgctcccccaaggtttgcccctcggcttcagatcgtttggactggcaggttgccctggaaactacactacaggtcgctattattcttagattgtgcccgcctatcacaggttgtctcggatcaagcgcgtttctgaagtagatctgtgtcgagattaatgcctgatcttgtggggggcccggattcattagggggctctcgtgtgcagttgcggaagacctcgtagattccgcaaccaccgagggtggaatgttccacacactcgaacttattgctattagccgtcaacctgttataatgtacgtgggtgaccagtgcaactcccgggtgacatggatacctatacggaccaccaccctggccgcacgaagtcgacgcatgaggacgcatttattttcagttactttgccacggctgcttagtcctcctgcaggacggcgcccgcacgacctcgtagcgctctgttgtccgtgagacttacggccactattaccagttaagacgctgtaggtagagttgatggtataccaaactacaacctggttcgtatagtagggctatgcttccggtggcagttctgcgacaatacttatcaaagtccgacagagttcgttaaaggaaaggaagacagaaggtcgcgaattgaacgaggaaagcggtcgctagtctacggaaaggcttctgccaggatgcactactgagatgtgtgactttctaaaggcggtcaacacaagagcccgtttccgtaataccgtatggcttggttgacccggtaacttaacgtcggtgcttcagaccaccgggagtcgggtgcagcgttacagcattgatttggtcacacctgctggcgtgtttataagtccatatttgtgtctctaaaccctggatgtgtcaaattagcgaggctgggaaactggaactatagctaaataatcctctaaagctttactgtcagggaacctatcatttccattcattgtgtctactttggtgtaccctgcttaagcatacccgactcctgtgaatacgctcttcagcagaagactgtgcgactcacaccggacgtttttgtcagagggcaaaaatcatcatttgtgctgtcgtctcggctacggtttcaactatttaaggtgactggattgtttgtcggggaggtgttacgtcgcacgtccgagtagatctctttattccgcaccatccaccgccattcgcatgtcttaacggaccgccgacttctaacacagccgttttatagtgatcacatgcaggtgagaactaacgtgcttatgatcagatcacgcgacctccacttgggagcatgaaccgaggtccaatccggatgttttttccgggcaaccacataaagggcgctactggacgaagtatttccaagacgatttttgaagagtattacatgcatacgagcatcgacccaacagccggttgagccccttgctccaacctttacatccgtatgcccgattaattggacgtctgccgggcatccacacacaaccgtcttaggacgcatacgcatcccaatgcagtgattatcgctacttccctgccaagaccggggtggaatataattcggacctgggggagtaggcacgaatggattcgtcataagaccatgggcgttatcagtcccctgcatatgtcggccatagcgaacctgctccgttgcctagaaacttcttgcagtccattctgactgtgtcaagaggctggccacctccgaaaatcgcgcattgctcttctgatccagtcatcggcacacatccgggcggtacttttaatctggacggagccaaaagcatcggccggaattactccatactacgcttccactaagtcgcgtggggacgctacgcgtgtgatctagccgttcatccacgtccctggtttccagggctaatttaattttccctgaggcagcgctgcgccagttgatggcaagtatttaagacggcacttgcatatctagggggataggggtggatatcacgcgtgaactgtagaggtccgccccctgcagttctcgtggctcaattccctgccggatgtcacatgaatgttaccagcttacgggggaagaatggacaagaatacaacaccatcgctgttgcggttccacgagtagagttatatacctagaagaaggcaacctccaggttaacgtcgcacacgatcctcgtttgcgagtaactgattgcgtgcagcgggggcaattacatgtcgccgtgtgtatgtcagattcgtagcccctaagtagagttcacgaactctcacggatctcttacctgtcatctatggccaagtaggtccgatggtgcggtctcccaacccataaaaagctttattgcgctgtcaaactggctgcacagccttaccgcgtgctcctgacacaggtacagtggcgatgttttctgctcagacattaccgtggttccgaagtttttagggttgacacgacaagtgcaatgttagacccgcgccaggctttcttttcaaaatgcgccacgcactaattgcgtttctcacttcctgaccccccggtaacgcgatcaatgtatcgcaacactgaaggttccaaccggactgaattttaatgaagaaacgaagaatcgcaaccttgtgcataaacgatagggtcgagagtatcttgacgaacgtacaaaggcacacaattagtaaaaacggaagagccagtagaaccgttcactaccatggtgacttcaaggttgaggactagctcagagctcggatagcgcatgtctacgctggtactcctacaatatgtcctccaatcattaagatgagagtgtcccgaagcttcattcgtctctatgaatcgtgtcgcgaccgcgatgttctttacatcttattcatttaggaagttggctataatcccaagactcacccgtgtcggtccctggacgtacatcgactacgctgcattacctcgaaacatccactaacattgtgcatttgtcccaaacaaaaggcagccacgtccatttcagttattcctctgtctatccagctcgccatgctcctagagttagagctaacctttaaaggatttccgaccaagaacccgtctcgcgttaatcaactcgcgcctcaaactcgatgtgtgaccgctatgccccctgcgtccgctggatttagtcacttgcattagatggaaccggcagaattgaccatggccttcctcaatcttcaggatctccgttttaaacacgagtgactttgggcctgggtgacagcggtcactaggcatgcccgacgattagcccacattgcccgaatctacgcgaaccaaacacagcggcaccgaagacgctacagcccgtgcgcgtatcttcacaaccaggccattatgtagtattacgatgcatcgacccgtagacaacagtaatgcactgctggtcatacttagtaggttggatacaatgactggaagctgaagtcggcaatcccgagaaaataagatgagcaaataaagtctgagaataagtgcggcgatacaaattactgcaataaacgataggctaatagacgctgacctgggataccgacggacttactttatcgtggttaaatcagttaaatctggcggctcggccgtgtgcgagggagcgtagtaaggactggtcgtaatatagccacaaatacaagctatacactactttcccggaaggacaactagggaggacactactgtcccttcgaattggttttgtttgcaacatgaatggcggtggttgccttcgtactcaaccaacccgatgtgcaccgtgaaagtgtagaagtcggcggccgggatggcatctccttcagaaactgttctcgatagggtgcacccactattaaccgatattcgtacaaaagggtacaggtgaggctggtaacgacctcactacaacaggctcgcacgtggcgatttatactcttaggcatcgtgctggccgtctccatagcttggtccccctaaatgcctgtgaaccacaccccctgaaactagtgaatatagagcttgtttgcagcagtgtatttcttccagggtgtgctacagtcgaaccacgaatccctggattttctgctttgctcgtctgggagccgccaactttgtgagtccattggtggtatagacgttcagcgtatgaaaaatgtgttcttccgcgaatgtggcaacagtcttcaccgattgatccttagggcccggtccactcaggctcaagcgatcgtcataaagccctaacgtcggcttcgttagagaaaccaggcggtggcaaactcccaattcagtctttgcttctaacccgtaggaaacgatcgtcgaaaccctcagaagatagcaaaatattgtactcatgctattcagtccgtttttacacgctctcgccattttagaggatagcgggtctataggttgagggaggagagagatcttccgagtatcgtattgaaacggtacgcgcgctgagaccgaacaaactggtttaacaggggtggaaattctcacgtcccgcttacatggggagcacgagagaagtatcgaaacccactgtataggatgtcgaatgcgccttgagagatgggctgacctgcccgtggacaatggccgatcgtctacactcccagtttcttcttcccctcagtcggtcggtaacgaacatgccaattattgggaattggtcgcagccagcatcgcctctattaacccttttatgcagcgcggcgttcgctctcgcccggcattgactgctcctttttgcgctccgctatcgcctcacgtctaccttatgctacggcgccatcccgtccgcggggttcagattccggttaaggaaactgcgtctataagatgtccacgagtgttagcgtctcttcttacattcgtaaagtgtaatcacaggggccatgagccagaatctggtcatgaacgtaggttcgtaggctacactaagcccgcgctgccgactttcaatcaaccctcataccctcctctacatcggctttactaaggtaagtattgccatttcctgttaatacaggtgaagtagtatcgggatcgtgttgcgacgatggactcatcacattcagtagtagaagaggccgaatctggcacatatcggtcccctcctactgataaagatcatcagtcatgcagggggtaacttcttttgacgaatatgttagataaagccattgctggtctacaatttggtctgcagagaatcccatgaaaacggagcctaaccaacaaaaccgtcgtgctttgcagttaccatccacactctccacctagacggggcgcacccccttgtttccgcctacctatacaaactatcttagcaccgaggcatacagtgagcgccgttgatggcgtactgtatgtctgaaacggggttcatccgacgatgttacaatcaggaccacgtcagggctggcaatgtgtacacaattggggctagacataaagtctaacggtcccgacaggatctaaatgtggttattggaagcccgagacctggaacttctggaaccgacacgaggactagtaaagatgcgactccagggattcaaacgcggttactccgtactgcggacattcaccgatcccatgtgcccgtggattggcgttgaagtaccggccacggcaggcggagctagacggttttggacgtaacacgtttttacacgaggatcaatgcttcggctattaaaagaaacgtaagacggttaggttagaggctgacaccggtgataacagaggctcagttttcaaccatggagttgaacgctctgtgttgcgctccatcttgaattacggtggcagagaagagcttactgccgcggatccacgctagtagctgctgccatacgtgttagcgcccagctggacagcccagcgtgacagggagagcggtttgtgtacgataatctggtccatccccgtgggtggctctggggcctattcggagccttattcgatatacgtactattaacgcctaagatcacaagtcttcaggagatatggtctgtctcgcgctaaagtagacgtgcgatccagaagtgatatggtcaccccaagtcggaatcaactgatcgactccggtcaactcggctatattaggctccgtttgtaacccgtgggagcatagggcaggcattgttgatagctatcaaagattatttaatattaaaaaactcggattaaccaggtagaggctaatgactaccctccccgaattcagcatatacacctgcttgcttccagcgttcaatgagcatgggcttcgatcaggttaagcaatgactggctaggaggcttttcttacgccgatgagtttcttcaccgaggtcccatacagcaaggcatgctgagcgaggatgaagccgtttggctcacacatttccacttattattgcctcatctggctcgagttatgtcgttcgattcgccacagacataccatgtatcgattgaccgacattatcaggcctgtccgttgtcatttatgctcctcttccggccaaatggccagcacgctacctcaacctatccatacacagtatgatctgctcaaacggacatcatccatgagataaatggtatcctcttgtggaagggacgtttcaaatactctggccgcgttgaacctttgtaaagtgtggcttctacattatgaggactgagctgctttcatagcttgtcgccgtgcagaggcccgggcgtggctgccgatcccgcacgtacggtttccagacgttacccgcataaagattcttgtcgagggccgggtacggggaaccaccagagagttctcacactaggaatcgtaccggccaacactcgtttaccaagaaactagataggcgagttagtaatatccgggtgtctttgtgcgattatgaaccagggaactctgagatatatcgctgcgctatagaataggctacgacgcatgaagtctgggattctatagcttgcagggtcggacagctgtcctgcgtgctccggatctatgttgctgcacagctcccctagaaaccgcacaggctaggagggtttctatttactggactatgaatctggaatcacagggctcggcctacgatttaaatagccgccgtcctggaggtgtgtcttatggagatcatagtgcgtgtaattccatgcgggctggatgtagtacgacatgtagccgttaattattgcaacattgtctacggatcctagtcggatccagaatagaacttgaagattattgcgattgggaccaaaccaatgttgaaacttcctctagtcaacgataggtccccgtacgaggaactgctgataggcggcccgagtacagttattcatgtctacaaactcagtcgaaaatacataatacacatttggaactgctagactaaccggatgcttgagagattcatcatttttaaatattgtggccgacagggagagtcttgcaagagcgtcaataactggttaagctgatactagggcagtttcgaaccccagagaatccactagagccgtgtccttactatgaggtcactccattctacctaacccctaagaacgcattcctgctgcgcctaccgtccgggtcaggtctaacgagttaaagtggtcgttgattaagatgccgcttgaagagttataactatttgaagtgttcaatatttaaaccatcgccggcgtttagatgtttaccagttggggcggttgtcctttaatacattcccatgatctggcttgacggccgatttgacccgttatccaagacgactattgcgccccacgagccttgtgtaccgcttttcaggatgttacacaagtatcgttgtcctatcttacgtttatagtgaacggaatcgattttgaagatgcgagatgacaacggtgttcgctagacccacggagttacccgagcaggtaggtggtcaccttgctcttaagcatcgttgctatgcgttggcctacgtatatcattaagtcaaagaggcgaagttcattgctgccatcgcggcgatggtttgtccattctcttccgggcgggtagttgcgtactcggttattgaaggcgacatgggccgctatgcactatttaggagactctacgcgcagcttccaattgttctggggaaccgctttgtggcagctcgcgctcacatcgggggtcgggccgggtcgaccttaatcattataacgcagggtagtcacaggggtggcgcctctattcttttcgagtccctgcagagtcgtcagccctcgggcgtagttacactcgatcgtgataaatacgaagggcttggtagagacacagcggtgagaatccagcaggaatttaacatagagcttctaaagtcgtcaggtatcattatcgatggctcaatgctgctcgggagttagatgctcaagcgactgtagtggctttggttggggagcgttgaaacagatattatctctaacgttacgagaccgtcaggtcggatgtgagctgcaaaagctgatatttttgtcatacgggccataggggtttatttcaatacggatctggagtagcgccagcgctgtggcactgagactgtcgccaaatagatagtgcccgagaagcaatgtggaaacctccccgcaggttatttcacactcggagtgagtgtgcctacaactttacgtaatctagattcgacccgacgccgaggagcgtttacacctctggttgagcccatcgctgagaccttcagcacattcgagagcccatacaggaggaaggggacaccagaacatgcgcctaaaatatgcttgtttgaccccggatacttaaccataatcgcctggttcatagtcatggtgaatggagtttgtggaacgttcccttcaaactgggttcccatcttcacctgtacgtgcacagtagataatagtcaccatgcattattgtggagtgcctgtagatcaaaggataagatcaacgagatttatcgcggcctctcacgctgacctttttgactttttcggtcgccacggaggcagaataccttagtctggtacaattctattatgtctcccaatgacttacaactatgtgagtacgggtcccacgccaacggccgtctaagaccagttagcaggagtcaaaaagaagttggaagaattaagcatactgtcacttgaaaagctatataaggtcctaatgcctggaaacttagcgatgagacaggccataaggtaagacgtgtattatactacgaggtctttgtatcgatggcgggctgggcttaaaagaatgcggcttgcgcgcggtttacatttaccgcggtcatgcgttagccaacatcgccagcgggccacaatggtagtgtgggctaatggccaccgtctcagggcccaaagtgcacatcccgctccactgtctgagaatcataggtgtggatcttgaggtatctccgatcttgctacgttggagcgttactggtaccaaaaggggtgcatagcaggcgatggcaccctcggccgtgagtaccagtggacgtgggggacacggacctgtagcatggctaggagaacacaccctaaacgactgacccactgcctttattctgcggataagtcataactgccttgggcttttcggtccatgacacttaggagactactgtgcaaaaatttaccgtttccactcaggcttacggtctccgcggtccgtcgcacgcgtcgactgtccattgtcgtaagcttacagtagaccgctgggattaaacaggctccctttcgagccactcttatttcgcgttcagctctcccaccccttttttgtgggcaggcagccattaaacgacgtaagaattactccgacgtcaaatattggcaa
"""
#dna pattern(s) that digest
dnapat = "CGCG"
dnapat2= "ATA"

dnaseq = dnaseq.upper()

def PatternCount(Text, Pattern):
    ilist=[]
    for i in range(len(Text)-len(Pattern)+1):
        if Text[i:i+len(Pattern)] == Pattern:
            ilist.append(i)
    return ilist

def fraglist(Text, ilist):
    fraglist=[]
    lenlist=[]
    lasti = ilist[-1]
    j=0
    for i in ilist:
        if j == 0:
            wrapfrag=Text[lasti:len(Text)]+Text[0+j:i]
            fraglist.append(wrapfrag)
            lenlist.append(len(wrapfrag))
        else:
            frag=Text[0+j:i]
            fraglist.append(frag)
            lenlist.append(len(frag))
        j=i
    return fraglist,lenlist

poslist = (PatternCount(dnaseq ,dnapat))

#Copy line with dnapat2 replaced with intended dnapattern if more DNA digest patterns are needed
poslist+= (PatternCount(dnaseq ,dnapat2))

poslist.sort()

frags,lens = fraglist(dnaseq,poslist)

lens.sort()

avglen=sum(lens)/len(lens)
avglen = '%.2f'%(avglen)

# An "interface" to matplotlib.axes.Axes.hist() method
n, bins, patches = plt.hist(x=lens, bins='auto', rwidth=0.85)
plt.grid(axis='y', alpha=0.75)
plt.xlabel('DNA fragment len')
plt.ylabel('Frequency')
plt.title('Frequency of DNA fragments of given length when digested by '+dnapat+" and "+dnapat2)
plt.text(40, 40, 'mean = '+ str(avglen)+' median = '+str(statistics.median(lens)))